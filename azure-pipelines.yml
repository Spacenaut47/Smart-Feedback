trigger:
  branches:
    include:
      - main

pool:
  name: Default

variables:
  backendProject: 'SmartFeedbackAPI/SmartFeedbackAPI.csproj'
  nodeVersion: '20.x'
  # deploymentToken is stored as secret in UI, not here

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    - script: |
        echo Installing frontend dependencies...
        npm install
      displayName: 'Install Frontend Dependencies'

    - script: |
        echo Building frontend with Vite...
        npm run build
        echo Listing dist contents...
        dir dist
      displayName: 'Build Frontend (Vite)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'dist'
        ArtifactName: 'frontend'
        publishLocation: 'Container'
      displayName: 'Publish Frontend Artifact'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '9.0.x'
      displayName: 'Install .NET 9 SDK'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(backendProject)'
      displayName: 'Restore .NET Dependencies'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(backendProject)'
        arguments: '--configuration Release'
      displayName: 'Build .NET Backend'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '$(backendProject)'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
      displayName: 'Publish .NET Backend'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'backend'
        publishLocation: 'Container'
      displayName: 'Publish Backend Artifact'

- stage: DeployFrontend
  dependsOn: Build
  jobs:
  - job: DeployJob
    steps:
    - download: current
      artifact: frontend

    - task: PowerShell@2
      displayName: 'Deploy Frontend via Azure CLI'
      inputs:
        targetType: 'inline'
        script: |
          $appName = "Smart-Feedback-Frontend"
          $resourceGroup = "Feedback"
          $subscriptionId = "aed6e21e-3a43-4ea3-a54d-d1b818c1d02c"
          $sourcePath = "$(Pipeline.Workspace)\frontend"

          az extension add --name staticwebapp

          Write-Host "Deploying Static Web App..."
          az staticwebapp upload `
            --name $appName `
            --resource-group $resourceGroup `
            --subscription $subscriptionId `
            --source "$sourcePath" `
            --token "$(deploymentToken)"
