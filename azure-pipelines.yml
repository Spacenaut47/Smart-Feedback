trigger:
  branches:
    include:
      - main

pool:
  name: Default  # Or 'windows-latest' if using Microsoft-hosted agents

variables:
  backendProject: 'SmartFeedbackAPI/SmartFeedbackAPI.csproj'
  nodeVersion: '18.x'
  configuration: 'Release'
  artifactFrontend: 'frontend-dist'
  artifactBackend: 'backend-api'
  publishDir: '$(Build.ArtifactStagingDirectory)'

stages:
  - stage: Build
    displayName: 'Build Backend and Frontend'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        steps:

          ### 🔁 Checkout the repo
          - checkout: self

          ### ⚙️ Set up .NET SDK
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '9.0.x'

          ### ⚙️ Restore .NET dependencies
          - task: DotNetCoreCLI@2
            inputs:
              command: 'restore'
              projects: '$(backendProject)'

          ### 🔨 Build .NET backend
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '$(backendProject)'
              arguments: '--configuration $(configuration)'

          ### ⚙️ Set up Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: '$(nodeVersion)'
            displayName: 'Install Node.js'

          ### 🔨 Install & Build React frontend
          - script: |
              npm install
              npm run build
            displayName: 'Build React Frontend'

          ### 📦 Publish frontend artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'frontend/dist'  # Adjust if build folder path is different
              ArtifactName: '$(artifactFrontend)'
              publishLocation: 'Container'
            displayName: 'Publish Frontend Artifact'

          ### 🔨 Publish backend output
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              projects: '$(backendProject)'
              arguments: '--configuration $(configuration) --output $(publishDir)'
              zipAfterPublish: true
            displayName: 'Publish Backend Output'

          ### 📦 Publish backend artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(publishDir)'
              ArtifactName: '$(artifactBackend)'
              publishLocation: 'Container'
            displayName: 'Publish Backend Artifact'
